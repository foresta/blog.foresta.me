+++
title="『チームトポロジー』を読んだ"
date="2024-01-28T12:09:54+09:00"
categories = []
tags = []
thumbnail = ""
+++

こんにちは、{{< exlink href="https://twitter.com/kz_morita" text="@kz_morita" >}}です。

今回は、{{< exlink href="https://pub.jmam.co.jp/book/b593881.html" text="チームトポロジー" >}} という本を読んだので感想などを書いていきます。

## 書籍について


- {{< exlink href="https://pub.jmam.co.jp/book/b593881.html" >}}

以下のような目次になっています。
```
PART I デリバリーの手段としてのチーム
Chapter1 組織図の問題
Chapter2 コンウェイの法則が重要な理由
Chapter3 チームファースト思考

PART Ⅱ フローを機能させるチームトポロジー
Chapter4 静的なチームトポロジーチームのアンチパターン
Chapter5 4つの基本的なチームタイプ
Chapter6 チームファーストな境界を決める

PART Ⅲ イノベーションと高速なデリバリーのため にチームインタラクションを進化させる
Chapter7 チームインタラクションモード
Chapter8 組織的センシングでチーム構造を進化させる
Chapter9 まとめ:次世代デジタル運用モデル
```

## 感想など

もともと、Platform Engineering まわりに興味がありその文脈で読み始めました。

書籍では、チームの種別やそのチーム間のインタラクションの種類について紹介されていました。

###### チームの種別

- ストリームアラインドチーム
- プラットフォームチーム
- イネイブリングチーム
- コンプリケイテッド・サブシステムチーム

#### チーム間のインタラクションモード

- コラボレーションモード
- X-as-a-Product
- ファシリテーションモード


X-as-a-Service について。データ基盤とデータプロダクト

ドキュメント とツールの提供

実際の運用フローを正確にとらえないと使えないツールになる。
正確にとらえつつある程度抽象化しないと個別案件ごとにツールを作るハメになる。

ストリームアラインドチームとのインターフェースをどう設計するかが鍵になりそう。

↑上記の解像度をあげるために、コラボレーションモードが重要。

X-as-a-Service はコミュニケーションを限定的に留めておくべき（コミュニケーションせずとも使える）

どのようにインターフェース境界を見定めるかは、DDDのコンテキスト境界マップなどの手法が役にたつ。

外部のプラットフォームを Wrap することでプラットフォーム化することで、一貫したDXを提供する。
-> ストリームアラインドチームの認知負荷をさげるために抽象化する

最低限のプラットフォーム (TVP) を特定する。Wiki かもしれないし、ツール群かもしれない。

必要なスキル

- チームコーティング
- メンタリング (特にシニアスタッフ向け)
- サービスマネジメント
- ドキュメントライティング
- プロセス改善

## まとめ
